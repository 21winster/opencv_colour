# Importing all modules
import cv2
import numpy as np

print("Enter the choice of colour you want to display ")
colour = int(input(" 1. RED \n 2. BLUE \n 3. GREEN \n 4. YELLOW \n 5. ORANGE \n 6. PURPLE \n"))

webcam_video = cv2.VideoCapture(0)

if colour == 1:
    lower = np.array([140, 85, 110])
    upper = np.array([348, 255, 255])
elif colour == 2:
    lower = np.array([94, 80, 72])
    upper = np.array([126, 255, 255])
elif colour == 3:
    lower = np.array([50, 52, 50])
    upper = np.array([85, 255, 255])
elif colour == 4:
    lower = np.array([15, 150, 20])
    upper = np.array([35, 255, 255])
elif colour == 5:
    lower = np.array([15, 110, 255])
    upper = np.array([30, 245, 255])
elif colour == 6:
    lower = np.array([128, 0, 128])
    upper = np.array([230, 255, 255])


while True:
    success, video = webcam_video.read() # Reading webcam footage
    img = cv2.cvtColor(video, cv2.COLOR_BGR2HSV) # Converting BGR image to HSV format
    mask = cv2.inRange(img, lower, upper) # Masking the image to find our color
    mask_contours, hierarchy = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE) # Finding contours in mask image
    # Finding position of all contours
    if len(mask_contours) != 0:
        for mask_contour in mask_contours:
            if cv2.contourArea(mask_contour) > 1000:
                x, y, w, h = cv2.boundingRect(mask_contour)
                cv2.rectangle(video, (x, y), (x + w, y + h), (0, 0, 255), 3) #drawing rectangle
    cv2.imshow("mask image", mask) # Displaying mask image
    cv2.imshow("window", video) # Displaying webcam image


    if cv2.waitKey(10) == ord('q'):
        webcam.release()
        cv2.destroyAllWindows()
        break
